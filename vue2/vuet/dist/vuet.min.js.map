{"version":3,"file":"vuet.min.js","sources":["../src/rules/route/route-scroll.js","../src/install.js","../src/rules/index.js","../src/vuet.js","../src/utils.js","../src/rules/route/route.js","../src/debug.js","../src/rules/life.js","../src/rules/manual.js","../src/rules/need.js","../src/rules/once.js","../src/index.js"],"sourcesContent":["import { _key } from './route'\nimport utils from '../../utils'\nimport debug from '../../debug'\n\nfunction mergeScrolls (scrolls) {\n  return Object.assign({ x: 0, y: 0 }, scrolls)\n}\n\nfunction initScroll (el, vnode, { path, name }, scrolls) {\n  const { context } = vnode\n  let scrollPath = context.$vuet[_key].scrolls[path]\n  if (!name || !context) return\n  if (!scrollPath[name]) {\n    scrollPath[name] = mergeScrolls(scrolls)\n  }\n  scrollTo(el, scrollPath[name])\n  return scrollPath[name]\n}\n\nfunction updateScroll (scrolls, event) {\n  const { scrollTop, scrollLeft, pageXOffset, pageYOffset } = event.target\n  scrolls.x = scrollLeft || pageYOffset || scrollLeft\n  scrolls.y = scrollTop || pageXOffset || scrollTop\n}\n\nexport function syncAllNameScroll (vm, { path, name }) {\n  if (!vm) return\n  const scrolls = vm.$vuet[_key].scrolls[path][name]\n  document.querySelectorAll(`[data-vuet-route-scroll=${name}]`).forEach(el => {\n    scrollTo(el, scrolls)\n  })\n}\n\nfunction updateWindowScroll (scrolls, event) {\n  scrolls.x = window.pageXOffset\n  scrolls.y = window.pageYOffset\n}\n\nexport function scrollTo (el, scrolls) {\n  if ('scrollTop' in el && el !== window) {\n    el.scrollLeft = scrolls.x\n    el.scrollTop = scrolls.y\n  } else {\n    el.scrollTo(scrolls.x, scrolls.y)\n  }\n}\n\nfunction isSelf (modifiers) {\n  return modifiers.window !== true || modifiers.self\n}\n\nfunction isWindow (modifiers) {\n  return modifiers.window\n}\n\nexport default {\n  inserted (el, { modifiers, value }, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!utils.isObject(value)) {\n        return debug.error('Parameter is the object type')\n      }\n      if (!utils.isString(value.path)) {\n        return debug.error('Ptah is imperative parameter')\n      }\n    }\n    if (isSelf(modifiers)) {\n      if (value.name === '__window__') {\n        return debug.error('name not __window__')\n      }\n      if (!value.name) {\n        return debug.error('Name is imperative parameter')\n      }\n      if (utils.isObject(value.self)) {\n        el.__vuetRouteSelfScrolls__ = value.self\n      }\n      const areaScrolls = initScroll(el, vnode, value, el.__vuetRouteScrolls__)\n      el.dataset.vuetRouteScroll = value.name\n      el.__vuetRouteSelfScroll__ = event => {\n        updateScroll(areaScrolls, event)\n        if (utils.isObject(el.__vuetRouteSelfScrolls__)) {\n          updateScroll(el.__vuetRouteSelfScrolls__, event)\n        }\n        syncAllNameScroll(vnode.context, value)\n      }\n      el.addEventListener('scroll', el.__vuetRouteSelfScroll__, false)\n    }\n\n    if (isWindow(modifiers)) {\n      if (utils.isObject(value.window)) {\n        el.__vuetRouteWindowScrolls__ = value.window\n      }\n      const windowScrolls = initScroll(\n        window,\n        vnode,\n        Object.assign({}, value, { name: '__window__' }),\n        el.__vuetRouteWindowScrolls__\n      )\n      el.__vuetRouteWindowScroll__ = event => {\n        updateWindowScroll(windowScrolls, event)\n        if (utils.isObject(el.__vuetRouteWindowScrolls__)) {\n          updateWindowScroll(el.__vuetRouteWindowScrolls__, event)\n        }\n      }\n      window.addEventListener('scroll', el.__vuetRouteWindowScroll__, false)\n    }\n  },\n  componentUpdated (el, { modifiers, value }, vnode) {\n    if (isSelf(modifiers) && utils.isObject(value.self)) {\n      el.__vuetRouteSelfScrolls__ = value.self\n      scrollTo(el, el.__vuetRouteSelfScrolls__)\n    }\n    if (isWindow(modifiers) && utils.isObject(value.window)) {\n      el.__vuetRouteWindowScrolls__ = value.window\n      scrollTo(window, el.__vuetRouteWindowScrolls__)\n    }\n  },\n  unbind (el) {\n    if (typeof el.__vuetRouteSelfScroll__ === 'function') {\n      el.removeEventListener('scroll', el.__vuetRouteSelfScroll__, false)\n      delete el.__vuetRouteSelfScroll__\n      delete el.__vuetRouteSelfScrolls__\n    }\n    if (typeof el.__vuetRouteWindowScroll__ === 'function') {\n      window.removeEventListener('scroll', el.__vuetRouteWindowScroll__, false)\n      delete el.__vuetRouteWindowScroll__\n      delete el.__vuetRouteWindowScrolls__\n    }\n  }\n}\n","import utils from './utils'\nimport routeScroll from './rules/route/route-scroll'\n\nexport let _Vue = null\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet._init(this)\n      }\n    },\n    destroyed () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n\n  Vue.directive('route-scroll', routeScroll)\n}\n","import life from './life'\nimport manual from './manual'\nimport need from './need'\nimport once from './once'\nimport route from './route/index'\n\nexport default function install (_Vue, Vuet) {\n  Vuet\n    .rule('life', life)\n    .rule('manual', manual)\n    .rule('need', need)\n    .rule('once', once)\n    .rule('route', route)\n}\n","import install, { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nimport rules from './rules/index'\n\nexport default class Vuet {\n  constructor (options) {\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n    return this\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n    return this\n  }\n  _init (app) {\n    if (this.app || !app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: function data () { return {} },\n      pathJoin: null,\n      ...this.options,\n      ...{\n        modules: {}\n      }\n    }\n    const keys = ['data', 'fetch', 'routeWatch', 'manuals']\n    const { pathJoin } = this._options\n    const initModule = (path, modules) => {\n      Object.keys(modules).forEach(k => {\n        const item = modules[k]\n        const _path = [...path, k]\n        if (utils.isFunction(item.data)) {\n          let newPath = null\n          if (pathJoin) {\n            newPath = _path.join(pathJoin)\n          } else {\n            newPath = [_path[0]]\n            for (let i = 1; i < _path.length; i++) {\n              newPath.push(_path[i].replace(/^(\\w)/, (v) => v.toUpperCase()))\n            }\n            newPath = newPath.join('')\n          }\n          this._options.modules[newPath] = item\n          this.reset(newPath)\n        }\n        if (keys.indexOf(k) === -1 && utils.isObject(item)) {\n          initModule(_path, item)\n        }\n      })\n    }\n    initModule([], this.options.modules)\n    callRuleHook('init', this)\n  }\n  getState (path) {\n    return this.store[path] || {}\n  }\n  setState (path, newState) {\n    if (!utils.isObject(newState)) return this\n    if (!this.store[path]) {\n      _Vue.set(this.store, path, newState)\n      return this\n    }\n    Object.assign(this.store[path], newState)\n    return this\n  }\n  fetch (path, params, setStateBtn) {\n    const module = this._options.modules[path]\n    if (!utils.isFunction(module.fetch)) return Promise.resolve(this.getState(path))\n    const data = {\n      path,\n      params: { ...params },\n      state: this.getState(path),\n      route: this.app.$route || {}\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].apply(this, arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.state)\n    return module.fetch.call(this, data)\n    .then(res => {\n      if (callHook('afterHooks', null, data, res) === false) return data.state\n      if (setStateBtn === false) return res\n      this.setState(path, res)\n      return data.state\n    })\n    .catch(e => {\n      if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.state)\n      return Promise.reject(e)\n    })\n  }\n  reset (path) {\n    const data = this._options.data.call(this)\n    const module = this._options.modules[path]\n    if (utils.isFunction(module.data)) {\n      Object.assign(data, module.data.call(this, path))\n    }\n    this.setState(path, data)\n    return this\n  }\n  destroy () {\n    this.vm.$destroy()\n    callRuleHook('destroy', this)\n  }\n}\n\nObject.assign(Vuet, {\n  options: {\n    rules: {}\n  },\n  install,\n  rule (name, rule) {\n    if (this.options.rules[name]) return this\n    this.options.rules[name] = rule\n    callRuleHook('install', _Vue, Vuet)\n    return this\n  },\n  mapRules (...paths) {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const vueRules = []\n    const addRule = (ruleName, any) => {\n      const rules = Vuet.options.rules[ruleName]\n      if (typeof any === 'string') {\n        vueRules.push(rules.rule({ path: any }))\n      } else {\n        vueRules.push(rules.rule(any))\n      }\n    }\n    Object.keys(opt).forEach(ruleName => {\n      const any = opt[ruleName]\n      if (Array.isArray(any)) {\n        return any.forEach(item => {\n          addRule(ruleName, item)\n        })\n      }\n      addRule(ruleName, any)\n    })\n    return {\n      mixins: vueRules\n    }\n  },\n  mapModules () {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const computed = {}\n    Object.keys(opt).forEach(k => {\n      const path = opt[k]\n      computed[k] = {\n        get () {\n          return this.$vuet.store[path]\n        },\n        set (val) {\n          this.$vuet.store[path] = val\n        }\n      }\n    })\n    return { computed }\n  },\n  use (plugin, opt) {\n    if (utils.isFunction(plugin)) {\n      plugin(_Vue, Vuet, opt)\n    } else if (utils.isFunction(plugin.install)) {\n      plugin.install(_Vue, Vuet, opt)\n    }\n    return this\n  }\n})\n\nfunction callRuleHook (hook, ...arg) {\n  const { rules } = Vuet.options\n  for (let k in rules) {\n    if (utils.isFunction(rules[k][hook])) {\n      rules[k][hook].apply(rules[k], arg)\n    }\n  }\n}\n\nVuet.use(rules)\n","const toString = Object.prototype.toString\n// Cached type string\nconst typeStrings = ['Object', 'Function', 'String', 'Undefined', 'Null']\n\nconst utils = {\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (utils.isString(args[0])) {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  set (obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: false,\n      writable: true,\n      configurable: false\n    })\n  }\n}\n\n// Add isXXX function\ntypeStrings.forEach(type => {\n  const typeString = `[object ${type}]`\n  utils[`is${type}`] = obj => {\n    return toString.call(obj) === typeString\n  }\n})\n\nexport default utils\n","import utils from '../../utils'\nimport { scrollTo, syncAllNameScroll } from './route-scroll'\n\nexport const _name = 'route'\nexport const _key = `__${_name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, _key, {\n      watchers: {},\n      scrolls: {}\n    })\n    Object.keys(vuet.store).forEach(path => {\n      utils.set(vuet[_key].watchers, path, [])\n      utils.set(vuet[_key].scrolls, path, {})\n    })\n  },\n  rule ({ path }) {\n    // route-scroll\n    function resetVuetScroll (vm) {\n      const vuet = vm.$vuet\n      Object.keys(vuet[_key].scrolls[path]).forEach(name => {\n        const scrolls = { x: 0, y: 0 }\n        vuet[_key].scrolls[path][name] = scrolls\n        if (name === '__window__') {\n          return scrollTo(window, scrolls)\n        }\n        syncAllNameScroll(vm, { path, name })\n      })\n    }\n\n    // route-watch\n    function getVuetWatchs (vuet) {\n      return vuet[_key].watchers[path]\n    }\n    function setVuetWatchs (vuet, val) {\n      vuet[_key].watchers[path] = val\n    }\n    function getWatchs (obj = {}, list) {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (obj, str) => {\n        const arr = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach(val => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to, from) {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n\n    return {\n      beforeCreate () {\n        const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n        const toWatch = getWatchs(this.$route, routeWatch)\n        if (diffWatch(toWatch, getVuetWatchs(this.$vuet))) {\n          this.$vuet.reset(path)\n          setVuetWatchs(this.$vuet, toWatch)\n          resetVuetScroll(this)\n        }\n        this.$vuet.fetch(path, { current: this }, false).then((res) => {\n          if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n          this.$vuet.setState(path, res)\n          setVuetWatchs(this.$vuet, toWatch)\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n            const toWatch = getWatchs(to, routeWatch)\n            const fromWatch = getWatchs(from, routeWatch)\n            if (!diffWatch(toWatch, fromWatch)) return false\n            this.$vuet.fetch(path, { current: this }).then((res) => {\n              if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n              resetVuetScroll(this)\n              this.$vuet.setState(path, res)\n              setVuetWatchs(this.$vuet, toWatch)\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","export default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nexport default {\n  rule ({ path, name }) {\n    return {\n      beforeCreate () {\n        const { manuals } = this.$vuet._options.modules[path]\n        const methods = {}\n        Object.keys(manuals).forEach(k => {\n          const fn = manuals[k]\n          if (utils.isFunction(fn)) {\n            methods[`${k}`] = (...arg) => {\n              return fn.apply(methods, [{\n                state: this.$vuet.getState(path),\n                vm: this,\n                vuet: this.$vuet\n              }, ...arg])\n            }\n          }\n        })\n        methods.reset = (...arg) => {\n          return this.$vuet.reset(path, ...arg)\n        }\n        methods.fetch = (...arg) => {\n          return this.$vuet.fetch(path, ...arg)\n        }\n        if (name) {\n          this[name] = methods\n        } else if (manuals.name) {\n          this[manuals.name] = methods\n        } else {\n          const arr = path.split(this.$vuet._options.pathJoin)\n          const name = `$${arr[arr.length - 1]}`\n          const $methods = this[name] = {}\n          Object.assign($methods, methods)\n        }\n      }\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'once'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, false)\n    })\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        if (this.$vuet[key][path] === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet[key][path] = true\n          })\n        }\n      }\n    }\n  }\n}\n","import Vuet from './vuet'\n\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n"],"names":["mergeScrolls","scrolls","Object","assign","x","y","initScroll","el","vnode","path","name","context","scrollPath","$vuet","_key","updateScroll","event","target","scrollTop","scrollLeft","pageXOffset","pageYOffset","syncAllNameScroll","vm","querySelectorAll","forEach","updateWindowScroll","window","scrollTo","isSelf","modifiers","self","isWindow","install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","utils","isUndefined","$options","vuet","_init","destroy","directive","routeScroll","_Vue","Vuet","rule","life","manual","need","once","route","callRuleHook","hook","rules","options","arg","k","isFunction","apply","toString","typeStrings","opt","args","arguments","isString","length","isObject","obj","key","value","typeString","type","call","set","keys","store","watchers","resetVuetScroll","getVuetWatchs","setVuetWatchs","val","getWatchs","list","getObjVal","str","split","arr","isNaN","String","push","JSON","stringify","diffWatch","to","from","i","_options","modules","routeWatch","toWatch","$route","reset","fetch","current","then","res","_this","setState","fromWatch","_this2","msg","Error","debug","error","__vuetRouteSelfScrolls__","areaScrolls","__vuetRouteScrolls__","dataset","vuetRouteScroll","__vuetRouteSelfScroll__","addEventListener","__vuetRouteWindowScrolls__","windowScrolls","__vuetRouteWindowScroll__","removeEventListener","manuals","methods","fn","getState","pathJoin","$methods","app","beforeHooks","afterHooks","initModule","item","_path","data","newPath","join","replace","v","toUpperCase","indexOf","newState","params","setStateBtn","module","Promise","resolve","callHook","state","catch","e","reject","$destroy","paths","getArgMerge","vueRules","addRule","ruleName","any","Array","isArray","computed","plugin","use","mapRules","bind","mapModules"],"mappings":"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"}